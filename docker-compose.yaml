services:
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_stream advertised_host localhost
    ports:
      - "5552:5552"
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./docker-rabbit-enabled_plugins:/etc/rabbitmq/enabled_plugins
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10

  http-in:
    image: springcloudstream/http-source-rabbit:5.0.1
    container_name: http-in
    ports:
      - "8081:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - HTTP_SUPPLIER_PATH_PATTERN=/employee/csv
      - SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION=employee-csv
      - SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_BINDER=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_TYPE=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_PORT=5672
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_USERNAME=guest

  splitter:
    image: springcloudstream/splitter-processor-rabbit:5.0.1
    container_name: splitter
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - SPLITTER_EXPRESSION=T(java.util.Arrays).stream(payload.split('\n')).skip(1).collect(T(java.util.stream.Collectors).toList())
      - SPRING_CLOUD_STREAM_BINDINGS_INPUT_DESTINATION=employee-csv
      - SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION=employee-csv-entry
      - SPRING_CLOUD_STREAM_BINDINGS_INPUT_BINDER=rabbit
      - SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_BINDER=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_TYPE=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_PORT=5672
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_USERNAME=guest

  processor:
    image: springcloudstream/script-processor-rabbit:5.0.1
    container_name: transformer
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_STREAM_BINDINGS_INPUT_DESTINATION=employee-csv-entry
      - SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION=employee-json
      - SPRING_CLOUD_STREAM_BINDINGS_INPUT_BINDER=rabbit
      - SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_BINDER=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_TYPE=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_PORT=5672
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_USERNAME=guest
      - SCRIPT_PROCESSOR_LANGUAGE=js
      - SCRIPT_PROCESSOR_SCRIPT=JSON.stringify(Object.fromEntries(payload.split(',').map((val, i) => [['employee_id', 'name', 'department', 'salary'][i], val])))

  http-out:
    image: springcloudstream/http-request-processor-rabbit:5.0.1
    container_name: http-out
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - HTTP_REQUEST_HTTP_METHOD_EXPRESSION="POST"
      - HTTP_REQUEST_URL_EXPRESSION="http://http-echo"
      - SPRING_CLOUD_STREAM_BINDINGS_INPUT_DESTINATION=employee-json
      - SPRING_CLOUD_STREAM_BINDINGS_INPUT_BINDER=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_TYPE=rabbit
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_PORT=5672
      - SPRING_CLOUD_STREAM_BINDERS_RABBIT_ENVIRONMENT_SPRING_RABBITMQ_USERNAME=guest

  http-echo:
    image: mendhak/http-https-echo:35
    container_name: http-echo
    environment:
      - HTTP_PORT=80  # Optional: explicitly set the HTTP port
      - ECHO_BACK=false  # Optional: disable echoing request details
      - RESPONSE_BODY=responded # Custom response
    volumes:
      - ./logs:/logs  # Optional: persist logs if needed